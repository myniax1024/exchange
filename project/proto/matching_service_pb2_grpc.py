# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""

import grpc

from proto import matching_service_pb2 as proto_dot_matching__service__pb2

GRPC_GENERATED_VERSION = "1.68.0"
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower

    _version_not_supported = first_version_is_lower(
        GRPC_VERSION, GRPC_GENERATED_VERSION
    )
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f"The grpc package installed is at version {GRPC_VERSION},"
        + " but the generated code in proto/matching_service_pb2_grpc.py depends on"
        + f" grpcio>={GRPC_GENERATED_VERSION}."
        + f" Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}"
        + f" or downgrade your generated code using grpcio-tools<={GRPC_VERSION}."
    )


class MatchingServiceStub(object):
    """Service definition for the matching engine"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SubmitOrder = channel.unary_unary(
            "/matching.MatchingService/SubmitOrder",
            request_serializer=proto_dot_matching__service__pb2.OrderRequest.SerializeToString,
            response_deserializer=proto_dot_matching__service__pb2.SubmitOrderResponse.FromString,
            _registered_method=True,
        )
        self.CancelOrder = channel.unary_unary(
            "/matching.MatchingService/CancelOrder",
            request_serializer=proto_dot_matching__service__pb2.CancelOrderRequest.SerializeToString,
            response_deserializer=proto_dot_matching__service__pb2.CancelOrderResponse.FromString,
            _registered_method=True,
        )
        self.SyncOrderBook = channel.unary_unary(
            "/matching.MatchingService/SyncOrderBook",
            request_serializer=proto_dot_matching__service__pb2.SyncRequest.SerializeToString,
            response_deserializer=proto_dot_matching__service__pb2.SyncResponse.FromString,
            _registered_method=True,
        )
        self.BroadcastOrderbook = channel.unary_unary(
            "/matching.MatchingService/BroadcastOrderbook",
            request_serializer=proto_dot_matching__service__pb2.BroadcastOrderbookRequest.SerializeToString,
            response_deserializer=proto_dot_matching__service__pb2.BroadcastOrderbookResponse.FromString,
            _registered_method=True,
        )
        self.GetOrderBook = channel.unary_unary(
            "/matching.MatchingService/GetOrderBook",
            request_serializer=proto_dot_matching__service__pb2.GetOrderbookRequest.SerializeToString,
            response_deserializer=proto_dot_matching__service__pb2.GetOrderbookResponse.FromString,
            _registered_method=True,
        )
        self.GetFills = channel.unary_stream(
            "/matching.MatchingService/GetFills",
            request_serializer=proto_dot_matching__service__pb2.FillRequest.SerializeToString,
            response_deserializer=proto_dot_matching__service__pb2.Fill.FromString,
            _registered_method=True,
        )
        self.PutFill = channel.unary_unary(
            "/matching.MatchingService/PutFill",
            request_serializer=proto_dot_matching__service__pb2.PutFillRequest.SerializeToString,
            response_deserializer=proto_dot_matching__service__pb2.PutFillResponse.FromString,
            _registered_method=True,
        )
        self.RegisterClient = channel.unary_unary(
            "/matching.MatchingService/RegisterClient",
            request_serializer=proto_dot_matching__service__pb2.ClientRegistrationRequest.SerializeToString,
            response_deserializer=proto_dot_matching__service__pb2.ClientRegistrationResponse.FromString,
            _registered_method=True,
        )
        self.RegisterME = channel.unary_unary(
            "/matching.MatchingService/RegisterME",
            request_serializer=proto_dot_matching__service__pb2.RegisterMERequest.SerializeToString,
            response_deserializer=proto_dot_matching__service__pb2.RegisterMEResponse.FromString,
            _registered_method=True,
        )
        self.DiscoverME = channel.unary_unary(
            "/matching.MatchingService/DiscoverME",
            request_serializer=proto_dot_matching__service__pb2.DiscoverMERequest.SerializeToString,
            response_deserializer=proto_dot_matching__service__pb2.DiscoverMEResponse.FromString,
            _registered_method=True,
        )


class MatchingServiceServicer(object):
    """Service definition for the matching engine"""

    def SubmitOrder(self, request, context):
        """Submit a new order to the matching engine"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def CancelOrder(self, request, context):
        """Cancel an existing order"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def SyncOrderBook(self, request, context):
        """Poll for order book updates for synchronization"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def BroadcastOrderbook(self, request, context):
        """Broadcast changes to internal orderbook state"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetOrderBook(self, request, context):
        """Get current state of order book"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetFills(self, request, context):
        """Stream of fill notifications"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def PutFill(self, request, context):
        """Put a routed fill to another ME"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def RegisterClient(self, request, context):
        """Client Registration"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def RegisterME(self, request, context):
        """ME Registration"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def DiscoverME(self, request, context):
        """ME Discovery"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_MatchingServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "SubmitOrder": grpc.unary_unary_rpc_method_handler(
            servicer.SubmitOrder,
            request_deserializer=proto_dot_matching__service__pb2.OrderRequest.FromString,
            response_serializer=proto_dot_matching__service__pb2.SubmitOrderResponse.SerializeToString,
        ),
        "CancelOrder": grpc.unary_unary_rpc_method_handler(
            servicer.CancelOrder,
            request_deserializer=proto_dot_matching__service__pb2.CancelOrderRequest.FromString,
            response_serializer=proto_dot_matching__service__pb2.CancelOrderResponse.SerializeToString,
        ),
        "SyncOrderBook": grpc.unary_unary_rpc_method_handler(
            servicer.SyncOrderBook,
            request_deserializer=proto_dot_matching__service__pb2.SyncRequest.FromString,
            response_serializer=proto_dot_matching__service__pb2.SyncResponse.SerializeToString,
        ),
        "BroadcastOrderbook": grpc.unary_unary_rpc_method_handler(
            servicer.BroadcastOrderbook,
            request_deserializer=proto_dot_matching__service__pb2.BroadcastOrderbookRequest.FromString,
            response_serializer=proto_dot_matching__service__pb2.BroadcastOrderbookResponse.SerializeToString,
        ),
        "GetOrderBook": grpc.unary_unary_rpc_method_handler(
            servicer.GetOrderBook,
            request_deserializer=proto_dot_matching__service__pb2.GetOrderbookRequest.FromString,
            response_serializer=proto_dot_matching__service__pb2.GetOrderbookResponse.SerializeToString,
        ),
        "GetFills": grpc.unary_stream_rpc_method_handler(
            servicer.GetFills,
            request_deserializer=proto_dot_matching__service__pb2.FillRequest.FromString,
            response_serializer=proto_dot_matching__service__pb2.Fill.SerializeToString,
        ),
        "PutFill": grpc.unary_unary_rpc_method_handler(
            servicer.PutFill,
            request_deserializer=proto_dot_matching__service__pb2.PutFillRequest.FromString,
            response_serializer=proto_dot_matching__service__pb2.PutFillResponse.SerializeToString,
        ),
        "RegisterClient": grpc.unary_unary_rpc_method_handler(
            servicer.RegisterClient,
            request_deserializer=proto_dot_matching__service__pb2.ClientRegistrationRequest.FromString,
            response_serializer=proto_dot_matching__service__pb2.ClientRegistrationResponse.SerializeToString,
        ),
        "RegisterME": grpc.unary_unary_rpc_method_handler(
            servicer.RegisterME,
            request_deserializer=proto_dot_matching__service__pb2.RegisterMERequest.FromString,
            response_serializer=proto_dot_matching__service__pb2.RegisterMEResponse.SerializeToString,
        ),
        "DiscoverME": grpc.unary_unary_rpc_method_handler(
            servicer.DiscoverME,
            request_deserializer=proto_dot_matching__service__pb2.DiscoverMERequest.FromString,
            response_serializer=proto_dot_matching__service__pb2.DiscoverMEResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "matching.MatchingService", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers(
        "matching.MatchingService", rpc_method_handlers
    )


# This class is part of an EXPERIMENTAL API.
class MatchingService(object):
    """Service definition for the matching engine"""

    @staticmethod
    def SubmitOrder(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/matching.MatchingService/SubmitOrder",
            proto_dot_matching__service__pb2.OrderRequest.SerializeToString,
            proto_dot_matching__service__pb2.SubmitOrderResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def CancelOrder(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/matching.MatchingService/CancelOrder",
            proto_dot_matching__service__pb2.CancelOrderRequest.SerializeToString,
            proto_dot_matching__service__pb2.CancelOrderResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def SyncOrderBook(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/matching.MatchingService/SyncOrderBook",
            proto_dot_matching__service__pb2.SyncRequest.SerializeToString,
            proto_dot_matching__service__pb2.SyncResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def BroadcastOrderbook(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/matching.MatchingService/BroadcastOrderbook",
            proto_dot_matching__service__pb2.BroadcastOrderbookRequest.SerializeToString,
            proto_dot_matching__service__pb2.BroadcastOrderbookResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def GetOrderBook(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/matching.MatchingService/GetOrderBook",
            proto_dot_matching__service__pb2.GetOrderbookRequest.SerializeToString,
            proto_dot_matching__service__pb2.GetOrderbookResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def GetFills(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_stream(
            request,
            target,
            "/matching.MatchingService/GetFills",
            proto_dot_matching__service__pb2.FillRequest.SerializeToString,
            proto_dot_matching__service__pb2.Fill.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def PutFill(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/matching.MatchingService/PutFill",
            proto_dot_matching__service__pb2.PutFillRequest.SerializeToString,
            proto_dot_matching__service__pb2.PutFillResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def RegisterClient(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/matching.MatchingService/RegisterClient",
            proto_dot_matching__service__pb2.ClientRegistrationRequest.SerializeToString,
            proto_dot_matching__service__pb2.ClientRegistrationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def RegisterME(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/matching.MatchingService/RegisterME",
            proto_dot_matching__service__pb2.RegisterMERequest.SerializeToString,
            proto_dot_matching__service__pb2.RegisterMEResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def DiscoverME(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/matching.MatchingService/DiscoverME",
            proto_dot_matching__service__pb2.DiscoverMERequest.SerializeToString,
            proto_dot_matching__service__pb2.DiscoverMEResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )
